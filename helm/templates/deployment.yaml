{{- if eq .Values.kind "Deployment" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tf-mirror.fullname" . }}
  labels:
    {{- include "tf-mirror.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
  {{- with .Values.strategy }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "tf-mirror.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "tf-mirror.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.server.exporter.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        {{- end }}
      {{- if .Values.podAnnotations }}
        {{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "tf-mirror.serviceAccountName" . }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: downloader
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            {{- range .Values.downloader.args }}
            - {{ . }}
            {{- end }}
          env:
            {{- range .Values.downloader.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          volumeMounts:
            - name: {{ .Release.Name }}-data
              mountPath: /data
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        - name: server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            {{- range .Values.server.args }}
            - {{ . }}
            {{- end }}
          env:
            {{- range .Values.server.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          ports:
            - containerPort: {{ .Values.server.port }}
              name: http
          {{- if not .Values.server.diableHealthCheck }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
              {{- if .Values.server.tls.enable }}
              scheme: HTTPS
              {{- end }}
            initialDelaySeconds: 120
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /health
              port: http
              {{- if .Values.server.tls.enable }}
              scheme: HTTPS
              {{- end }}
            initialDelaySeconds: 30
            timeoutSeconds: 3
            periodSeconds: 5
          {{- end }}
          volumeMounts:
            - name: {{ .Release.Name }}-data
              mountPath: /data
            {{- if .Values.server.tls.enable }}
            - name: tls
              mountPath: /tls
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: {{ .Release.Name }}-data
          {{- if not .Values.data.persistentvolume }}
          emptyDir: {}
          {{- else }}
          persistentVolumeClaim:
            claimName: {{ include "tf-mirror.fullname" . }}-data
          {{- end }}
        {{- if .Values.server.tls.enable }}
        - name: tls
          secret:
            {{- if .Values.server.tls.existingSecret }}
            secretName: {{ .Values.server.tls.existingSecret }}
            {{- else }}
            secretName: {{ template "tf-mirror.fullname" . }}-tls
            {{- end }}
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
{{- end }}
