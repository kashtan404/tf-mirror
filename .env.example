# Terraform Registry Mirror Configuration
# Copy this file to .env and modify the values as needed

# =============================================================================
# COMMON CONFIGURATION
# =============================================================================

# Application mode: 'downloader' or 'server' (required)
TF_MIRROR_MODE=downloader

# Enable debug logging
# Set to 'true' or '1' to enable debug output
DEBUG=false

# =============================================================================
# DOWNLOADER CONFIGURATION
# =============================================================================

# Proxy configuration (optional)
# Supports HTTP, HTTPS, and SOCKS5 proxies
# Examples:
#   PROXY=http://proxy.example.com:8080
#   PROXY=https://proxy.example.com:8080
#   PROXY=socks5://127.0.0.1:1080
#   PROXY=http://username:password@proxy.example.com:8080
PROXY=

# Check period for new provider versions (in hours)
# Default: 24 hours
CHECK_PERIOD=24

# Directory where provider packages will be downloaded
# This directory will be created if it doesn't exist
# Default: ./data
DOWNLOAD_PATH=./data

# Provider filter (optional)
# Comma-separated list of providers to download
# Format: namespace/name (e.g., hashicorp/aws)
# Examples:
#   PROVIDER_FILTER=hashicorp/aws
#   PROVIDER_FILTER=hashicorp/aws,hashicorp/helm,hashicorp/kubernetes
# Leave empty to download all providers (warning: requires significant storage)
PROVIDER_FILTER=

# Platform filter (optional)
# Comma-separated list of platforms to download
# Format: os_arch (e.g., linux_amd64)
# Examples:
#   PLATFORM_FILTER=linux_amd64
#   PLATFORM_FILTER=linux_amd64,darwin_arm64,windows_amd64
# Leave empty to download all supported platforms
PLATFORM_FILTER=

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Host address to listen on
# Use 0.0.0.0 to listen on all interfaces
# Use 127.0.0.1 or localhost to listen only on local interface
# Default: 0.0.0.0 (all interfaces)
LISTEN_HOST=0.0.0.0

# Port to listen on
# Default: 80 for HTTP, 443 for HTTPS
LISTEN_PORT=8080

# Public hostname of the server
# Used for generating download URLs
# Optional - if not set, will use the listen host
HOSTNAME=localhost

# =============================================================================
# TLS/HTTPS CONFIGURATION
# =============================================================================

# Enable HTTPS/TLS
# Set to 'true' to enable HTTPS
ENABLE_TLS=false

# Path to TLS certificate file
# Required if ENABLE_TLS=true
TLS_CRT=/etc/ssl/certs/terraform-mirror.crt

# Path to TLS private key file
# Required if ENABLE_TLS=true
TLS_KEY=/etc/ssl/private/terraform-mirror.key

# =============================================================================
# DATA PATHS
# =============================================================================

# Path to directory containing downloaded packages
# Used by the server to serve provider files
# Should be the same as DOWNLOAD_PATH
DATA_PATH=./data

# =============================================================================
# DOCKER COMPOSE SPECIFIC
# =============================================================================

# External port mappings for Docker Compose
HTTP_PORT=8080
HTTPS_PORT=8443

# SSL certificate paths for nginx (when using with-nginx profile)
SSL_CERT_PATH=
SSL_KEY_PATH=

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Maximum concurrent downloads for downloader
# Default: 5, increase for faster downloads if bandwidth allows
MAX_CONCURRENT=5

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Example 1: Basic downloader with specific providers
# TF_MIRROR_MODE=downloader
# DOWNLOAD_PATH=/var/lib/tf-mirror
# PROVIDER_FILTER=hashicorp/aws,hashicorp/helm,hashicorp/kubernetes
# PLATFORM_FILTER=linux_amd64,darwin_arm64
# CHECK_PERIOD=6

# Example 2: Basic HTTP server
# TF_MIRROR_MODE=server
# DATA_PATH=/var/lib/tf-mirror
# LISTEN_HOST=0.0.0.0
# LISTEN_PORT=8080
# HOSTNAME=terraform-mirror.local

# Example 3: HTTPS server with TLS
# TF_MIRROR_MODE=server
# DATA_PATH=/var/lib/tf-mirror
# LISTEN_HOST=0.0.0.0
# LISTEN_PORT=443
# HOSTNAME=terraform-mirror.example.com
# ENABLE_TLS=true
# TLS_CRT=/etc/ssl/certs/terraform-mirror.crt
# TLS_KEY=/etc/ssl/private/terraform-mirror.key

# Example 4: Corporate environment with proxy and filters
# TF_MIRROR_MODE=downloader
# PROXY=http://corporate-proxy.example.com:8080
# DOWNLOAD_PATH=/opt/terraform-mirror/data
# PROVIDER_FILTER=hashicorp/aws,hashicorp/azurerm,hashicorp/google
# PLATFORM_FILTER=linux_amd64
# CHECK_PERIOD=6
# DEBUG=true

# Example 5: Development environment (minimal providers)
# TF_MIRROR_MODE=downloader
# DOWNLOAD_PATH=./data
# PROVIDER_FILTER=hashicorp/random,hashicorp/null,hashicorp/local
# PLATFORM_FILTER=linux_amd64,darwin_arm64
# CHECK_PERIOD=1
